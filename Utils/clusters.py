

#k-means


def getClusters(dataset_name,num_series,approach):
    clusters = []
    if approach == "local":
        clusters = [[i] for i in range(num_series)]
    elif approach == "global":
        clusters = [[i for i in range(num_series)]]
        print("in global")
    elif approach == "clustering":
        if dataset_name == "exchange_rate":
            clusters = [[4], [6, 7], [0, 2, 3, 5], [1]]
        elif dataset_name == "ETTh1":
            clusters =  [[4], [0, 2], [1, 3], [5], [6]]
        elif dataset_name == "ETTh2":
            clusters = [[4], [5], [0, 1, 3], [2], [6]]
        elif dataset_name == "ETTm1":
            clusters = [[4, 6], [0, 2], [1, 3], [5]]
        elif dataset_name == "ETTm2":
            clusters = [[4], [5], [0, 1, 2, 3, 6]]
        elif dataset_name == "weather":
            clusters = [[5, 7, 12, 14, 15], [11, 18, 20], [1, 2, 3, 6, 8, 9, 19], [0, 4, 10, 13], [16, 17]]
        elif dataset_name == "national_illness":
            clusters = [[2, 3, 4], [5, 6], [0, 1]]
        elif dataset_name == "traffic":
            clusters =  [[684, 686], [8, 81, 161, 209, 211, 468, 523, 619], [50, 170, 370, 449], [176, 302, 419], [85, 119, 271, 330, 390, 640], [493, 553, 623, 773], [21, 54, 73, 153, 163, 253, 574, 591], [19, 64, 166, 192, 195, 217, 292, 308, 314, 364, 369, 403, 424, 456, 514, 568], [82], [31, 222, 297, 366, 469, 527, 529], [34, 53, 65, 78, 102, 111, 118, 129, 134, 156, 179, 197, 204, 215, 282, 321, 368, 400, 495, 501, 506, 524, 545, 548, 576, 579, 587, 600, 615, 616, 656, 668, 670, 711, 713, 714, 716, 720, 722, 725, 748, 750, 753, 761, 765, 790, 843, 854, 855, 856, 857, 860], [230, 289, 641], [575, 643], [0, 61, 137, 147, 158, 185, 216, 241, 245, 275, 294, 322, 378, 612, 712], [381, 429, 561, 589, 644, 732, 749, 808], [588, 690, 701, 768, 791, 801], [543, 565], [108, 150, 229, 477], [59, 239, 242, 280, 296, 333, 365, 416, 417, 421, 440, 452, 458, 510, 602, 664, 665, 675, 715, 730, 751, 752, 759, 764, 861], [306, 384, 423, 430, 552, 774], [267, 663], [17, 66, 422, 558, 601, 620, 659, 691, 779], [617, 632], [72, 636, 839], [6, 46, 77, 95, 98, 274, 278, 362, 375, 387, 418, 448, 455, 847], [97, 133, 187, 277, 394, 395, 470], [737], [26, 40, 52, 71, 90, 107, 212, 343, 344, 376, 443, 461, 474, 559, 590, 595, 645, 660, 710, 814, 827], [11, 47, 89, 160, 189, 279, 436, 540, 739], [39, 411, 733, 821], [508, 747, 789], [44, 168, 283, 300, 356, 385, 570, 692, 852], [320, 459, 635], [128, 188, 353, 354, 639], [35, 37, 38, 88, 103, 110, 112, 140, 167, 205, 214, 336, 360, 371, 383, 396, 408, 414, 426, 450, 451, 476, 486, 498, 505, 539, 550, 613, 625, 666, 678, 689, 700, 762, 777, 780, 781, 782, 805, 817, 832, 835, 859], [25, 264, 399, 401, 466, 674], [220, 228, 315, 332, 393], [537], [30, 120, 126, 141, 145, 206, 409, 446, 483, 572, 582, 634, 687, 707, 740, 756, 776, 837], [51, 57, 62, 92, 115, 143, 152, 183, 210, 223, 238, 255, 260, 269, 307, 323, 337, 341, 357, 392, 405, 438, 453, 499, 504, 507, 515, 554, 581, 597, 605, 649, 651, 654, 655, 694, 717, 723, 727, 784, 787, 796, 806, 807, 820, 823, 824, 830, 831, 833, 838], [28, 79, 132, 247], [33, 84, 91, 105, 175, 361, 386, 410, 425, 467, 546, 562, 609, 706, 736], [7, 22, 29, 100, 162, 172, 246, 291, 335, 339, 444, 463, 497, 503, 551, 594, 637, 698, 704, 709, 754, 797, 819], [42, 68, 99, 101, 122, 173, 184, 240, 256, 309, 348, 415, 457, 491, 521, 563, 596, 646, 648, 676, 679, 681, 682, 708, 721, 735, 744, 788, 799, 804, 842], [181], [243, 454, 606, 703, 705], [413], [406], [840], [2, 532], [171, 177, 286, 287, 324, 433, 437], [55, 334, 517, 718], [10, 70, 123, 125, 234, 257, 265, 345, 462, 471, 484, 557, 604, 757, 815], [379, 688, 772, 785, 786, 803], [9, 225, 586], [445], [402, 460, 580], [151, 191, 221, 251, 428, 481, 519, 528, 534, 542, 627, 629, 647, 650, 653, 742, 763, 795], [32, 93, 144, 201, 288, 398, 404, 420, 465, 518, 533, 535, 608, 638], [226, 391], [14, 135, 329, 427], [20, 49, 63, 117, 138, 261, 312, 327, 487, 488, 633, 662, 669, 731], [67, 213, 342, 372, 447, 485, 489, 494, 547, 578], [23, 475, 626, 798], [5, 24, 41, 43, 76, 139, 180, 200, 203, 304, 319, 328, 374, 513, 525, 549, 758, 849], [45, 69], [121, 164, 196, 270, 382, 622, 680, 783], [219, 316, 318], [83, 106, 136, 142, 155, 193, 258, 295, 388, 512, 555, 556, 571, 642, 667, 671, 696, 699, 724, 741, 778, 836, 844], [36, 80, 124, 165, 190, 377, 492, 520, 577, 593, 598, 603, 610, 652, 657, 683, 695, 719, 755, 767, 775, 792, 811, 812, 834], [227, 266, 310, 380, 621], [693], [56], [96, 284, 412, 538, 624, 734], [299, 326, 531, 592, 729], [1, 4, 74, 94, 131, 236, 262, 263, 331, 349, 373, 389, 760, 845], [298], [15, 541, 573], [3, 12, 104, 148, 169, 174, 178, 182, 268, 303, 305, 338, 355, 431, 434, 435, 464, 500, 516, 583, 630, 658, 800, 802, 809, 825, 828, 829, 846], [249, 250, 252, 473, 628, 673], [202, 232, 290, 325, 350, 479], [48, 75, 116, 146, 186, 248, 281, 311, 363, 367, 490, 560, 584, 585, 611, 618, 738, 818], [60, 231, 313, 816], [16, 113, 127, 218, 224, 237, 439, 480, 509, 511, 522, 526, 536, 566, 567, 677, 697, 702, 726, 743, 745, 746, 766, 850], [769, 770, 771, 813], [276], [109, 130, 442], [87, 235, 317], [293, 478], [199, 358, 482, 496, 502, 841, 853, 858], [86, 149, 194, 685], [198, 273, 352], [13, 114, 154, 259, 351, 407, 564, 569, 672, 728], [397], [472], [244], [18, 27, 159, 207, 208, 233, 254, 272, 301, 340, 347, 359, 432, 441, 530, 544, 599, 614, 631, 661, 794, 810, 822, 826, 848, 851], [285, 607], [58, 346, 793], [157]]
        elif dataset_name == "weather":
            clusters = [[5, 7, 12, 14, 15, 16, 17], [11, 18, 20], [1, 2, 3, 6, 8, 9, 19], [0, 4, 10, 13]]
        elif dataset_name == "electricity":
            clusters = [[147, 151, 159, 160, 161, 163, 167, 171, 172, 177, 183, 184, 186, 203, 216, 254, 268, 269, 278], [295], [4, 21, 69, 104], [155, 173, 176, 190, 211, 247, 266, 288], [310], [139, 193, 195, 196, 197, 200, 204, 219, 248, 251, 252, 258, 259, 260, 263, 264], [6, 113, 114], [8, 15, 38, 41, 78], [1, 118, 121, 125, 128, 131], [29], [103], [179, 180, 191, 192, 198, 202, 206, 217, 218, 220, 224, 225, 241, 271, 272, 283, 284], [129, 132, 319], [88, 93, 101, 286, 292, 296, 306, 308, 315], [2, 106, 298], [9, 18, 27, 32, 46, 48, 59, 64, 70, 79, 98, 289], [105], [146], [107, 299], [182], [108, 109, 110], [136, 137, 138, 141, 142, 143, 144, 156, 199, 201, 208, 212, 213, 214, 222, 223, 235, 249, 256, 262, 265, 267], [89, 94, 95, 290, 291, 293, 297, 300, 301, 305, 311, 312, 314], [25, 36], [102, 112, 148, 149, 150, 152, 153, 157, 158, 162, 166, 168, 169, 170, 174, 175, 181, 230, 232, 234, 274, 281, 304], [5, 10, 16, 17, 24, 26, 28, 33, 34, 37, 39, 40, 42, 43, 47, 52, 53, 56, 58, 60, 61, 62, 63, 65, 67, 72, 74, 76, 80, 96, 100], [84, 85], [90, 287, 303, 307], [92], [134], [50, 82, 117, 119, 120, 122, 133, 318, 320], [130], [317], [12, 19, 68, 75, 86, 87, 99], [135, 164, 187, 209, 229, 231, 236, 238, 239, 240, 242, 277, 282], [11, 123, 126], [245], [81], [145, 154, 165, 185, 210, 215, 221, 226, 227, 228, 233, 237, 243, 244, 253, 257, 261, 273, 279, 280, 285], [115], [7, 14, 31, 45, 51, 55, 73], [91, 294, 302, 309, 313, 316], [127], [124], [140, 178, 188, 189, 194, 205, 207, 246, 250, 255, 270, 275, 276], [0], [97, 111, 116], [3, 13, 20, 22, 23, 30, 35, 44, 49, 54, 66, 71, 77], [57], [83]]
    return clusters







# résultats de l'approche clustering de jérôme

# def getClusters(dataset_name,num_series,approach):
#     clusters = []
#     if approach == "local":
#         clusters = [[i] for i in range(num_series)]
#     elif approach == "global":
#         clusters = [[i for i in range(num_series)]]
#         print("in global")
#     elif approach == "clustering":
#         if dataset_name == "exchange_rate":
#             clusters = [ [1,2,3,6], [4,5], [0], [7] ]
#         elif dataset_name == "ETTh1":
#             clusters =  [ [3 , 5], [2 , 4 , 6], [0,1] ]
#         elif dataset_name == "ETTh2":
#             clusters = [ [4], [1], [3], [2], [0 , 5 , 6] ]
#         elif dataset_name == "ETTm1":
#             clusters = [ [2], [1 , 3 , 5], [0 , 6], [4] ]
#         elif dataset_name == "ETTm2":
#             clusters = [ [6], [5], [1], [3], [0 , 2], [4] ]
#         elif dataset_name == "weather":
#             clusters = [ [0 , 15 , 20], [4 , 13  ,14], [3 , 6 , 7], [11 , 12 , 17 , 18], [2], [5], [16], [9], [1 , 10  ,19], [8] ]
#         elif dataset_name == "national_illness":
#             clusters = [ [0 , 1], [3 , 5], [2 , 4 , 6] ]
#         elif dataset_name == "traffic":
#             clusters = [ [269], [179], [38 , 371  ,599], [118 , 741], [317], [571], [168 , 515], [614 , 826], [725], [215], [140], [453], [579], [718], [50 , 615], [87], [368], [258], [60 , 142], [714], [575], [226 , 334], [504 , 517 , 682], [34 , 491], [388  ,573 , 860], [55], [545], [476 , 492 , 510 ,  799], [143 , 183 , 235], [266 , 832  ,859], [765,  784], [787], [548 , 831], [49  , 78 , 301], [405  ,737], [53 , 360], [103 , 244], [673 , 780], [415 , 475 , 546], [509 , 621  ,855], [108 , 629], [691], [91  ,681], [116 , 184  ,252,  502  ,529], [159 , 286 , 628], [150], [136 , 473], [35,  408 , 693], [249 , 735], [79 , 427 , 593], [51,  631  ,778], [256 , 280  ,486], [164], [112 , 135 , 578  ,619 , 771], [270  ,596 , 680  ,744], [346 , 358 , 523], [127  ,325  ,500  ,648 , 844], [3  , 15 , 110 , 341  ,469], [27  ,202 , 417  ,697], [138 , 477 , 689  ,798 , 809 , 842], [208 , 288 , 290 , 329 , 607 , 636  ,761], [156 , 565 , 767], [326 , 351 , 505 , 539 , 795], [198 , 449 , 527 , 676], [297 , 501 , 649 , 667 , 781], [247 , 376 , 587 , 772], [289  ,551 , 555,  630 , 671], [28 , 248  ,264 , 331,  337  ,446  ,584 , 632], [132,  196 , 406  ,429 , 635  ,679  ,788 , 817], [44 ,  99  ,157 , 314 , 352  ,366 , 732], [222 , 467 , 675 , 748 , 783], [199,  641  ,792], [62 , 350 , 457  ,728  ,755], [13 , 309 , 439 , 468,  543 , 782 , 808], [302  ,471  ,600  ,695 , 717 , 743], [330  ,336  ,399  ,688], [299 , 521], [303 , 485,  544 , 564 , 786 , 789,  851], [111 , 715 , 729 , 756 , 823], [31  ,482  ,559  ,677  ,770 , 811], [308 , 480 , 490  ,497 , 553 , 561], [67  , 85  ,203 , 356 , 403 , 416 , 540 , 829], [54,  153 , 333 , 372 , 493 , 522 , 531  ,777  ,857], [40 ,  48 , 107 , 239 , 313 , 355 , 384 , 696], [223  ,233  ,271  ,281  ,342,  390  ,556 , 588], [19,  618], [224 , 447 , 466  ,806], [26  , 76 , 419  ,481  ,638  ,646 , 791 , 839], [243 , 318 , 425 , 484 , 498  ,524  ,768], [131  ,177 , 362 , 412 , 623], [25 ,  82  , 86  ,213], [204 , 316 , 424 , 528  ,616  ,633], [14  , 47  ,188  ,218 , 323 , 379], [141  ,154 , 581 , 830], [242 , 328  ,348 , 349 , 364 , 610 , 640 , 752 , 785], [119 , 409 , 856], [178  ,386 , 707], [64 , 113  ,145  ,207 , 212 , 227  ,687], [41 , 537 , 645  ,652  ,822 , 850], [433 , 525  ,660  ,730], [23  ,163  ,195 , 276  ,532 , 572 , 662 , 683 , 754 , 790 , 825], [24 , 605 , 642  ,702], [206 , 335 , 533  ,534 , 739], [30 ,  81 , 189  ,193 , 430 , 757], [241 , 367  ,472  ,569 , 586  ,591 , 747 , 812], [117,  148 , 217 , 228  ,319 , 420  ,464  ,624], [151 , 200 , 577 , 684 , 710 , 846], [109,  306 ,494 , 749], [324 , 327 , 694], [2  , 36  ,160 , 175 , 298 , 574 , 651 , 704], [74,  180 , 236 , 338 , 613 , 796 , 805  ,814], [56 ,  80  ,128 , 210 , 434 , 512 , 700 , 751], [43,   94 , 104  ,144 , 176  ,321  ,445 , 711  ,764 , 835], [192 , 393 , 611  ,626  ,776], [130  ,272 , 310 , 438 , 708 , 836 , 858], [12 , 361 , 654], [166  ,389], [7  , 93 , 261,  444,  448 , 495], [374 , 375 , 456 , 653], [16 , 268,  339 , 380 , 423 , 442 , 519], [644 , 720, 753], [353 , 634 , 773], [61 , 216 , 359  ,514], [122 , 201 , 344 , 410  ,436 , 443 , 499 , 520], [96 , 245 , 801], [147  ,205 , 437  ,719 , 758 , 841], [6 , 172 , 452 , 620  ,698], [65 , 211], [88 ,  92  ,123 , 345 , 407 , 435], [0   , 4 , 538,  706 , 794 , 854], [428 , 560], [59,  294 , 664 , 724 , 815], [45 ,  66,  174 , 250 , 251,  395,  511 , 594], [240 , 421 , 592], [57  ,161  ,311], [221 , 260 , 487 , 601], [42 , 165 , 225 , 230 , 370 , 576 , 608], [77 , 232  ,292  ,496 , 637 , 845], [75 , 120 , 483  ,665 , 816], [98  ,557], [137 , 562 , 661], [134 , 146 , 478 , 669], [234 , 340  ,549 , 597  ,647  ,712 , 813], [5 , 580,  807], [369 , 431  ,432  ,568  ,668 , 690 , 847], [238], [22 , 382  ,385 , 397  ,422 , 849], [354  ,488  ,503 , 536], [21 , 455  ,582  ,819], [9  , 29  ,263  ,699], [659], [171 , 343 , 404  ,639], [604], [52 , 598  ,627], [454,  625  ,734], [274,  411  ,558 , 827 , 852], [155,  740], [365], [1 , 450 , 542 , 617 , 622,  723 , 763], [554 , 760], [68  ,246  ,381 , 686 , 797], [162  ,285  ,414], [90,  255  ,265 , 460], [305 , 585], [32  ,190,  518 , 779], [33], [17 , 133  ,802], [100  ,287 , 293 , 547  ,674], [70 , 570], [766,  821], [72  , 83  ,181 , 516 , 550  ,692 , 838], [115,  129], [394 , 678], [121 , 149 ,169 , 257], [413  ,745  ,818], [197], [461], [58 , 158 , 589], [279  ,567], [378], [304 , 377 , 470  ,769], [465], [322], [284], [101 , 187], [387], [259  ,426], [722], [332], [703], [214 , 262], [709 , 762], [254], [194 , 253 , 726], [736], [219], [526], [727], [37,  231 , 713], [837], [462 , 506,  643 , 655], [300], [173,  237 , 513  ,603  ,606], [220 , 552], [18 , 400], [185], [583], [705 , 793], [508], [459 , 590], [296], [347], [458], [295 , 861], [650], [106], [69], [666  ,848], [89], [8 , 418], [291], [114 , 312], [402,  612], [283 , 804], [670], [10 , 440], [84], [182], [46], [315], [229 , 401], [102  ,125], [391], [463], [507], [750], [810], [742], [357 , 731], [803], [820], [95], [541], [800], [373 , 474 , 658 , 701  ,834], [721], [152 , 186], [672], [609], [273], [396], [71], [602], [63], [824], [139], [363], [595 , 656], [275], [167], [105], [73], [489], [733], [124], [277], [11], [657], [170], [20], [843], [278], [563], [307], [833], [685], [383], [39], [759], [738], [840], [191], [663], [774], [392], [451], [746], [267], [209 , 282], [126], [320], [441 , 479], [97], [398], [566], [530], [775], [828], [535], [716], [853] ]
#         elif dataset_name == "weather":
#             clusters = [ [0 , 15 , 20], [4 , 13 , 14], [3 , 6 , 7], [11 , 12  ,17 , 18], [2], [5], [16], [9], [1 , 10 , 19], [8] ]
#         elif dataset_name == "electricity":
#             clusters = [ [125], [116], [90  ,200  ,281], [202], [122 , 158,  223], [216], [162 , 207], [120], [104  ,225  ,245], [140], [298], [10], [58 , 114 , 118 , 175], [33 , 136  ,317], [0 , 180  ,248], [20 , 111  ,117  ,251  ,300], [50,  190  ,264], [6  ,153 , 176], [16  ,131  ,188], [60  ,133  ,233  ,275  ,313], [13 , 150,  239 , 267], [32  , 51  ,273  ,315], [42 ,  74  , 94 , 256], [101 , 177 , 228], [40  , 62 , 141 , 269], [88 , 115  ,145  ,224 , 271 , 286], [45 ,  67  ,160 , 161  ,214  ,258  ,289], [174 , 191  ,254 , 320], [143 , 173 , 250 , 307], [22,   54  , 95  ,241], [63  , 66   ,80   ,82  ,102,  193 , 284], [44], [30  , 53  ,240  ,276], [34 , 147 , 243], [31 ,  55  ,167], [4  , 24  , 96 , 112], [59 , 100  ,195 , 294], [103 , 149 , 227 , 268  ,309], [35  , 68  ,235  ,237  ,257 , 287], [61 , 282], [83], [28 ,  39  , 65 , 229], [26  , 78  ,186  ,299], [36 , 89], [15  , 72  ,107 , 204 , 261  ,266], [98], [7 ,  27 ,  43   ,76 , 135 , 146 , 208 , 212], [2   ,37  ,291], [178  ,203 , 292], [99 , 220  ,238], [113 , 142  ,231  ,255], [144 , 312], [8 ,  92  ,252], [3  ,156  ,197 , 303], [182,  265], [23 , 157 , 168], [19 ,  73 , 263  ,277  ,310  ,316], [12 , 137  ,285], [205], [17 , 210  ,280], [79 , 152 , 192  ,274], [84 , 121  ,138  ,234], [198 , 288 , 302], [129], [105  ,166], [41], [29  ,159 , 170], [48 , 249  ,270], [9  , 46 , 183], [77, 232], [85 , 123], [18 , 124], [211], [38  ,318], [196], [290], [56 ,  87   ,93  ,110  ,185  ,295], [119  ,154 , 201], [14 , 134 , 155 , 279], [172], [297], [21 ,  57   ,71  ,189,  311], [52 , 130  ,187], [218], [209 , 293], [165 , 259], [314], [69 , 179 , 246], [97,  163 , 206 , 304], [106 , 236], [128 , 169 , 213], [139 , 219], [47], [247], [86,  221  ,230  ,272], [5  ,184 , 262], [75  ,199], [25], [171], [164], [301], [11], [109], [217], [64 , 108,  253], [226 , 242], [244 , 306], [215], [81 , 132 ,260], [222 , 283], [126], [70], [127 , 278], [194], [319], [49], [1], [305], [181], [151], [296], [308], [148], [91] ] 
#     return clusters



